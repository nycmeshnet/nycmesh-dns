name: Deploy

on:
  pull_request:
  push:
    branches:
      - james/infra2
  workflow_dispatch:
    branches:
      - master

permissions: read-all

env:
  # Secrets
  TF_VAR_PROXMOX_TOKEN_ID: ${{ secrets.TF_VAR_PROXMOX_TOKEN_ID }}
  TF_VAR_PROXMOX_TOKEN_SECRET: ${{ secrets.TF_VAR_PROXMOX_TOKEN_SECRET }}
  TF_VAR_MESH_DNS_LOCAL_PASSWORD: ${{ secrets.TF_VAR_MESH_DNS_LOCAL_PASSWORD }} 
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # S3 bucket for the Terraform state
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}

jobs:
  wireguard_example:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # @v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Setup ansible
        run: pip install ansible && export PATH="$HOME/.local/bin:$PATH" && ansible-galaxy collection install cloud.terraform

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # @v3
        with:
          terraform_version: 1.8.3

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
        working-directory: ./infra/terraform/

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
        working-directory: ./infra/terraform/
    
      - name: Terraform validate
        id: validate
        run: terraform validate
        working-directory: ./infra/terraform/

      - name: Setup WireGuard
        run:  |
          sudo apt-get update && sudo apt-get install -y wireguard
          echo "${{ secrets.WIREGUARD_PRIVATE_KEY }}" > privatekey
          sudo ip link add dev wg0 type wireguard
          sudo ip address add dev wg0 ${{ secrets.WIREGUARD_OVERLAY_NETWORK_IP }} peer ${{ secrets.TF_VAR_PROXMOX_HOST }}
          sudo wg set wg0 listen-port 48123 private-key privatekey peer ${{ secrets.WIREGUARD_PEER_PUBLIC_KEY }} allowed-ips 0.0.0.0/0 endpoint ${{ secrets.WIREGUARD_ENDPOINT }}
          sudo ip link set up dev wg0
          rm privatekey

      - name: Terraform plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -var-file=jon.tfvars -input=false
        continue-on-error: true
        working-directory: ./infra/terraform/

      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # @v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
 
            <details><summary>Show Plan</summary>
 
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
 
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
 
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/james/infra2' && github.event_name == 'push'
        run: |
          echo "$TF_VAR_MESH_DNS_SSH_KEY" > ${TF_VAR_dns_ssh_key_name}
          echo "$TF_VAR_MESH_DNS_PUB_KEY" > ${TF_VAR_dns_ssh_key_name}.pub
          terraform apply -auto-approve -var-file=jon.tfvars -input=false
        working-directory: ./infra/terraform/
      
      - name: Run playbook
        if: github.ref == 'refs/heads/james/infra2' && github.event_name == 'push'
        run: sleep 45 && export PATH="$HOME/.local/bin:$PATH" && ansible-playbook -i inventory.yaml dns_server.yaml
        working-directory: ./github_runner/ansible/

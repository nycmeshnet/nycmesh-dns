name: "Terraform"

on:
  pull_request:
    paths:
      - 'nycmesh.net/**'
  push:
    branches:
      - master
  workflow_dispatch:
    branches:
      - master

permissions: read-all

defaults:
  run:
    working-directory: nycmesh.net

env:
  # verbosity setting for Terraform logs
  TF_LOG: INFO
  # Credentials for name dot com
  TF_VAR_name_dot_com_user: ${{ secrets.TF_VAR_name_dot_com_user }}
  TF_VAR_name_dot_com_token: ${{ secrets.TF_VAR_name_dot_com_token }}
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # S3 bucket for the Terraform state
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # @v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # @v3
        with:
          terraform_version: 1.8.3

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
    
      - name: Terraform validate
        id: validate
        run: terraform validate
 
      - name: Terraform plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
      
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # @v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
 
            <details><summary>Show Plan</summary>
 
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
 
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
 
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
